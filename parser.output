Terminals unused in grammar

   DOUBLE_VAL
   UINT_VAL
   QUES
   COLON


State 2 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarList FuncList

    2 VarList: %empty
    3        | VarList Var
    4        | VarList END_LINE

    5 Var: Type IDList END_LINE

    6 IDList: ID
    7       | IDList COMMA ID
    8       | ID OPEN_BOX INT_VAL CLOSE_BOX
    9       | IDList COMMA ID OPEN_BOX INT_VAL CLOSE_BOX

   10 FuncList: %empty
   11         | FuncList Func
   12         | FuncList END_LINE

   13 Func: FUNC Type ID OPEN_PAR ParamList CLOSE_PAR END_LINE Block

   14 ParamList: %empty
   15          | Type ID
   16          | ParamList COMMA Type ID
   17          | Type ID OPEN_BOX CLOSE_BOX
   18          | ParamList COMMA Type ID OPEN_BOX CLOSE_BOX

   19 Content: %empty
   20        | Content Statement
   21        | Content END_LINE

   22 Block: BEG END_LINE Content END END_LINE

   23 Statement: Var
   24          | FuncCall END_LINE
   25          | If_Statement
   26          | While_Statement
   27          | For_Statement
   28          | Assign_Statement
   29          | Return_Statement
   30          | Break_Statement
   31          | Continue_Statement
   32          | Scan_Statement END_LINE
   33          | Print_Statement END_LINE

   34 If_Statement: IF Expr THEN END_LINE Block
   35             | IF Expr THEN END_LINE Block ELSE END_LINE Block

   36 While_Statement: WHILE Expr END_LINE Block

   37 For_Statement: FOR ID EQUAL Expr COMMA Expr COMMA INT_VAL END_LINE Block

   38 Assign_Statement: Loc EQUAL Expr END_LINE

   39 Return_Statement: RETURN Expr END_LINE
   40                 | RETURN END_LINE

   41 Break_Statement: BREAK END_LINE

   42 Continue_Statement: CONTINUE END_LINE

   43 Expr: Expr Binop Term
   44     | NOT Expr
   45     | Term

   46 Term: Term MULTIPLY Factor
   47     | Term DIVIDE Factor
   48     | Factor

   49 Factor: Literal
   50       | Loc
   51       | FuncCall
   52       | OPEN_PAR Expr CLOSE_PAR

   53 Literal: Int_Literal
   54        | Lit_Literal

   55 Int_Literal: INT_VAL

   56 Lit_Literal: CHAR_VAL
   57            | TRUE
   58            | FALSE

   59 Type: INT
   60     | UINT
   61     | CHAR
   62     | BOOL
   63     | VOID
   64     | STRING
   65     | DOUBLE

   66 Binop: PLUS
   67      | MINUS
   68      | AND
   69      | OR
   70      | MOD
   71      | EQUALTO
   72      | NOTEQUALTO
   73      | GREATER
   74      | GREATER_EQUAL
   75      | LESS
   76      | LESS_EQUAL

   77 FuncCall: ID OPEN_PAR ArgList CLOSE_PAR

   78 ArgList: Arg
   79        | ArgList COMMA Arg
   80        | %empty

   81 Arg: STRING_VAL
   82    | Expr

   83 Loc: ID
   84    | ID OPEN_BOX Expr CLOSE_BOX

   85 Print_Statement: PRINT OPEN_PAR ArgList CLOSE_PAR

   86 Scan_Statement: SCAN OPEN_PAR ArgList CLOSE_PAR


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNC (258) 13
OPEN_PAR (259) 13 52 77 85 86
CLOSE_PAR (260) 13 52 77 85 86
OPEN_BOX (261) 8 9 17 18 84
CLOSE_BOX (262) 8 9 17 18 84
INT (263) 59
BOOL (264) 62
VOID (265) 63
UINT (266) 60
DOUBLE (267) 65
CHAR (268) 61
STRING (269) 64
IF (270) 34 35
THEN (271) 34 35
ELSE (272) 35
FOR (273) 37
WHILE (274) 36
RETURN (275) 39 40
TRUE (276) 57
FALSE (277) 58
COMMA (278) 7 9 16 18 37 79
END_LINE (279) 4 5 12 13 21 22 24 32 33 34 35 36 37 38 39 40 41 42
BEG (280) 22
END (281) 22
BREAK (282) 41
CONTINUE (283) 42
ID (284) 6 7 8 9 13 15 16 17 18 37 77 83 84
INT_VAL (285) 8 9 37 55
DOUBLE_VAL (286)
UINT_VAL (287)
CHAR_VAL (288) 56
STRING_VAL (289) 81
QUES (290)
COLON (291)
PRINT (292) 85
SCAN (293) 86
AND (294) 68
OR (295) 69
NOT (296) 44
NOTEQUALTO (297) 72
EQUALTO (298) 71
LESS (299) 75
GREATER (300) 73
LESS_EQUAL (301) 76
GREATER_EQUAL (302) 74
PLUS (303) 66
MINUS (304) 67
MULTIPLY (305) 46
DIVIDE (306) 47
MOD (307) 70
EQUAL (308) 37 38


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
VarList (56)
    on left: 2 3 4, on right: 1 3 4
Var (57)
    on left: 5, on right: 3 23
IDList (58)
    on left: 6 7 8 9, on right: 5 7 9
FuncList (59)
    on left: 10 11 12, on right: 1 11 12
Func (60)
    on left: 13, on right: 11
ParamList (61)
    on left: 14 15 16 17 18, on right: 13 16 18
Content (62)
    on left: 19 20 21, on right: 20 21 22
Block (63)
    on left: 22, on right: 13 34 35 36 37
Statement (64)
    on left: 23 24 25 26 27 28 29 30 31 32 33, on right: 20
If_Statement (65)
    on left: 34 35, on right: 25
While_Statement (66)
    on left: 36, on right: 26
For_Statement (67)
    on left: 37, on right: 27
Assign_Statement (68)
    on left: 38, on right: 28
Return_Statement (69)
    on left: 39 40, on right: 29
Break_Statement (70)
    on left: 41, on right: 30
Continue_Statement (71)
    on left: 42, on right: 31
Expr (72)
    on left: 43 44 45, on right: 34 35 36 37 38 39 43 44 52 82 84
Term (73)
    on left: 46 47 48, on right: 43 45 46 47
Factor (74)
    on left: 49 50 51 52, on right: 46 47 48
Literal (75)
    on left: 53 54, on right: 49
Int_Literal (76)
    on left: 55, on right: 53
Lit_Literal (77)
    on left: 56 57 58, on right: 54
Type (78)
    on left: 59 60 61 62 63 64 65, on right: 5 13 15 16 17 18
Binop (79)
    on left: 66 67 68 69 70 71 72 73 74 75 76, on right: 43
FuncCall (80)
    on left: 77, on right: 24 51
ArgList (81)
    on left: 78 79 80, on right: 77 79 85 86
Arg (82)
    on left: 81 82, on right: 78 79
Loc (83)
    on left: 83 84, on right: 38 50
Print_Statement (84)
    on left: 85, on right: 33
Scan_Statement (85)
    on left: 86, on right: 32


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (VarList)

    Program  go to state 1
    VarList  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: VarList . FuncList
    3 VarList: VarList . Var
    4        | VarList . END_LINE

    INT       shift, and go to state 4
    BOOL      shift, and go to state 5
    VOID      shift, and go to state 6
    UINT      shift, and go to state 7
    DOUBLE    shift, and go to state 8
    CHAR      shift, and go to state 9
    STRING    shift, and go to state 10
    END_LINE  shift, and go to state 11

    END_LINE  [reduce using rule 10 (FuncList)]
    $default  reduce using rule 10 (FuncList)

    Var       go to state 12
    FuncList  go to state 13
    Type      go to state 14


State 3

    0 $accept: Program $end .

    $default  accept


State 4

   59 Type: INT .

    $default  reduce using rule 59 (Type)


State 5

   62 Type: BOOL .

    $default  reduce using rule 62 (Type)


State 6

   63 Type: VOID .

    $default  reduce using rule 63 (Type)


State 7

   60 Type: UINT .

    $default  reduce using rule 60 (Type)


State 8

   65 Type: DOUBLE .

    $default  reduce using rule 65 (Type)


State 9

   61 Type: CHAR .

    $default  reduce using rule 61 (Type)


State 10

   64 Type: STRING .

    $default  reduce using rule 64 (Type)


State 11

    4 VarList: VarList END_LINE .

    $default  reduce using rule 4 (VarList)


State 12

    3 VarList: VarList Var .

    $default  reduce using rule 3 (VarList)


State 13

    1 Program: VarList FuncList .
   11 FuncList: FuncList . Func
   12         | FuncList . END_LINE

    FUNC      shift, and go to state 15
    END_LINE  shift, and go to state 16

    $default  reduce using rule 1 (Program)

    Func  go to state 17


State 14

    5 Var: Type . IDList END_LINE

    ID  shift, and go to state 18

    IDList  go to state 19


State 15

   13 Func: FUNC . Type ID OPEN_PAR ParamList CLOSE_PAR END_LINE Block

    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    VOID    shift, and go to state 6
    UINT    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    CHAR    shift, and go to state 9
    STRING  shift, and go to state 10

    Type  go to state 20


State 16

   12 FuncList: FuncList END_LINE .

    $default  reduce using rule 12 (FuncList)


State 17

   11 FuncList: FuncList Func .

    $default  reduce using rule 11 (FuncList)


State 18

    6 IDList: ID .
    8       | ID . OPEN_BOX INT_VAL CLOSE_BOX

    OPEN_BOX  shift, and go to state 21

    $default  reduce using rule 6 (IDList)


State 19

    5 Var: Type IDList . END_LINE
    7 IDList: IDList . COMMA ID
    9       | IDList . COMMA ID OPEN_BOX INT_VAL CLOSE_BOX

    COMMA     shift, and go to state 22
    END_LINE  shift, and go to state 23


State 20

   13 Func: FUNC Type . ID OPEN_PAR ParamList CLOSE_PAR END_LINE Block

    ID  shift, and go to state 24


State 21

    8 IDList: ID OPEN_BOX . INT_VAL CLOSE_BOX

    INT_VAL  shift, and go to state 25


State 22

    7 IDList: IDList COMMA . ID
    9       | IDList COMMA . ID OPEN_BOX INT_VAL CLOSE_BOX

    ID  shift, and go to state 26


State 23

    5 Var: Type IDList END_LINE .

    $default  reduce using rule 5 (Var)


State 24

   13 Func: FUNC Type ID . OPEN_PAR ParamList CLOSE_PAR END_LINE Block

    OPEN_PAR  shift, and go to state 27


State 25

    8 IDList: ID OPEN_BOX INT_VAL . CLOSE_BOX

    CLOSE_BOX  shift, and go to state 28


State 26

    7 IDList: IDList COMMA ID .
    9       | IDList COMMA ID . OPEN_BOX INT_VAL CLOSE_BOX

    OPEN_BOX  shift, and go to state 29

    $default  reduce using rule 7 (IDList)


State 27

   13 Func: FUNC Type ID OPEN_PAR . ParamList CLOSE_PAR END_LINE Block

    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    VOID    shift, and go to state 6
    UINT    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    CHAR    shift, and go to state 9
    STRING  shift, and go to state 10

    $default  reduce using rule 14 (ParamList)

    ParamList  go to state 30
    Type       go to state 31


State 28

    8 IDList: ID OPEN_BOX INT_VAL CLOSE_BOX .

    $default  reduce using rule 8 (IDList)


State 29

    9 IDList: IDList COMMA ID OPEN_BOX . INT_VAL CLOSE_BOX

    INT_VAL  shift, and go to state 32


State 30

   13 Func: FUNC Type ID OPEN_PAR ParamList . CLOSE_PAR END_LINE Block
   16 ParamList: ParamList . COMMA Type ID
   18          | ParamList . COMMA Type ID OPEN_BOX CLOSE_BOX

    CLOSE_PAR  shift, and go to state 33
    COMMA      shift, and go to state 34


State 31

   15 ParamList: Type . ID
   17          | Type . ID OPEN_BOX CLOSE_BOX

    ID  shift, and go to state 35


State 32

    9 IDList: IDList COMMA ID OPEN_BOX INT_VAL . CLOSE_BOX

    CLOSE_BOX  shift, and go to state 36


State 33

   13 Func: FUNC Type ID OPEN_PAR ParamList CLOSE_PAR . END_LINE Block

    END_LINE  shift, and go to state 37


State 34

   16 ParamList: ParamList COMMA . Type ID
   18          | ParamList COMMA . Type ID OPEN_BOX CLOSE_BOX

    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    VOID    shift, and go to state 6
    UINT    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    CHAR    shift, and go to state 9
    STRING  shift, and go to state 10

    Type  go to state 38


State 35

   15 ParamList: Type ID .
   17          | Type ID . OPEN_BOX CLOSE_BOX

    OPEN_BOX  shift, and go to state 39

    $default  reduce using rule 15 (ParamList)


State 36

    9 IDList: IDList COMMA ID OPEN_BOX INT_VAL CLOSE_BOX .

    $default  reduce using rule 9 (IDList)


State 37

   13 Func: FUNC Type ID OPEN_PAR ParamList CLOSE_PAR END_LINE . Block

    BEG  shift, and go to state 40

    Block  go to state 41


State 38

   16 ParamList: ParamList COMMA Type . ID
   18          | ParamList COMMA Type . ID OPEN_BOX CLOSE_BOX

    ID  shift, and go to state 42


State 39

   17 ParamList: Type ID OPEN_BOX . CLOSE_BOX

    CLOSE_BOX  shift, and go to state 43


State 40

   22 Block: BEG . END_LINE Content END END_LINE

    END_LINE  shift, and go to state 44


State 41

   13 Func: FUNC Type ID OPEN_PAR ParamList CLOSE_PAR END_LINE Block .

    $default  reduce using rule 13 (Func)


State 42

   16 ParamList: ParamList COMMA Type ID .
   18          | ParamList COMMA Type ID . OPEN_BOX CLOSE_BOX

    OPEN_BOX  shift, and go to state 45

    $default  reduce using rule 16 (ParamList)


State 43

   17 ParamList: Type ID OPEN_BOX CLOSE_BOX .

    $default  reduce using rule 17 (ParamList)


State 44

   22 Block: BEG END_LINE . Content END END_LINE

    $default  reduce using rule 19 (Content)

    Content  go to state 46


State 45

   18 ParamList: ParamList COMMA Type ID OPEN_BOX . CLOSE_BOX

    CLOSE_BOX  shift, and go to state 47


State 46

   20 Content: Content . Statement
   21        | Content . END_LINE
   22 Block: BEG END_LINE Content . END END_LINE

    INT       shift, and go to state 4
    BOOL      shift, and go to state 5
    VOID      shift, and go to state 6
    UINT      shift, and go to state 7
    DOUBLE    shift, and go to state 8
    CHAR      shift, and go to state 9
    STRING    shift, and go to state 10
    IF        shift, and go to state 48
    FOR       shift, and go to state 49
    WHILE     shift, and go to state 50
    RETURN    shift, and go to state 51
    END_LINE  shift, and go to state 52
    END       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    ID        shift, and go to state 56
    PRINT     shift, and go to state 57
    SCAN      shift, and go to state 58

    Var                 go to state 59
    Statement           go to state 60
    If_Statement        go to state 61
    While_Statement     go to state 62
    For_Statement       go to state 63
    Assign_Statement    go to state 64
    Return_Statement    go to state 65
    Break_Statement     go to state 66
    Continue_Statement  go to state 67
    Type                go to state 14
    FuncCall            go to state 68
    Loc                 go to state 69
    Print_Statement     go to state 70
    Scan_Statement      go to state 71


State 47

   18 ParamList: ParamList COMMA Type ID OPEN_BOX CLOSE_BOX .

    $default  reduce using rule 18 (ParamList)


State 48

   34 If_Statement: IF . Expr THEN END_LINE Block
   35             | IF . Expr THEN END_LINE Block ELSE END_LINE Block

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 78
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 49

   37 For_Statement: FOR . ID EQUAL Expr COMMA Expr COMMA INT_VAL END_LINE Block

    ID  shift, and go to state 86


State 50

   36 While_Statement: WHILE . Expr END_LINE Block

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 87
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 51

   39 Return_Statement: RETURN . Expr END_LINE
   40                 | RETURN . END_LINE

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    END_LINE  shift, and go to state 88
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 89
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 52

   21 Content: Content END_LINE .

    $default  reduce using rule 21 (Content)


State 53

   22 Block: BEG END_LINE Content END . END_LINE

    END_LINE  shift, and go to state 90


State 54

   41 Break_Statement: BREAK . END_LINE

    END_LINE  shift, and go to state 91


State 55

   42 Continue_Statement: CONTINUE . END_LINE

    END_LINE  shift, and go to state 92


State 56

   77 FuncCall: ID . OPEN_PAR ArgList CLOSE_PAR
   83 Loc: ID .
   84    | ID . OPEN_BOX Expr CLOSE_BOX

    OPEN_PAR  shift, and go to state 93
    OPEN_BOX  shift, and go to state 94

    $default  reduce using rule 83 (Loc)


State 57

   85 Print_Statement: PRINT . OPEN_PAR ArgList CLOSE_PAR

    OPEN_PAR  shift, and go to state 95


State 58

   86 Scan_Statement: SCAN . OPEN_PAR ArgList CLOSE_PAR

    OPEN_PAR  shift, and go to state 96


State 59

   23 Statement: Var .

    $default  reduce using rule 23 (Statement)


State 60

   20 Content: Content Statement .

    $default  reduce using rule 20 (Content)


State 61

   25 Statement: If_Statement .

    $default  reduce using rule 25 (Statement)


State 62

   26 Statement: While_Statement .

    $default  reduce using rule 26 (Statement)


State 63

   27 Statement: For_Statement .

    $default  reduce using rule 27 (Statement)


State 64

   28 Statement: Assign_Statement .

    $default  reduce using rule 28 (Statement)


State 65

   29 Statement: Return_Statement .

    $default  reduce using rule 29 (Statement)


State 66

   30 Statement: Break_Statement .

    $default  reduce using rule 30 (Statement)


State 67

   31 Statement: Continue_Statement .

    $default  reduce using rule 31 (Statement)


State 68

   24 Statement: FuncCall . END_LINE

    END_LINE  shift, and go to state 97


State 69

   38 Assign_Statement: Loc . EQUAL Expr END_LINE

    EQUAL  shift, and go to state 98


State 70

   33 Statement: Print_Statement . END_LINE

    END_LINE  shift, and go to state 99


State 71

   32 Statement: Scan_Statement . END_LINE

    END_LINE  shift, and go to state 100


State 72

   52 Factor: OPEN_PAR . Expr CLOSE_PAR

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 101
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 73

   57 Lit_Literal: TRUE .

    $default  reduce using rule 57 (Lit_Literal)


State 74

   58 Lit_Literal: FALSE .

    $default  reduce using rule 58 (Lit_Literal)


State 75

   55 Int_Literal: INT_VAL .

    $default  reduce using rule 55 (Int_Literal)


State 76

   56 Lit_Literal: CHAR_VAL .

    $default  reduce using rule 56 (Lit_Literal)


State 77

   44 Expr: NOT . Expr

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 102
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 78

   34 If_Statement: IF Expr . THEN END_LINE Block
   35             | IF Expr . THEN END_LINE Block ELSE END_LINE Block
   43 Expr: Expr . Binop Term

    THEN           shift, and go to state 103
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 79

   45 Expr: Term .
   46 Term: Term . MULTIPLY Factor
   47     | Term . DIVIDE Factor

    MULTIPLY  shift, and go to state 116
    DIVIDE    shift, and go to state 117

    $default  reduce using rule 45 (Expr)


State 80

   48 Term: Factor .

    $default  reduce using rule 48 (Term)


State 81

   49 Factor: Literal .

    $default  reduce using rule 49 (Factor)


State 82

   53 Literal: Int_Literal .

    $default  reduce using rule 53 (Literal)


State 83

   54 Literal: Lit_Literal .

    $default  reduce using rule 54 (Literal)


State 84

   51 Factor: FuncCall .

    $default  reduce using rule 51 (Factor)


State 85

   50 Factor: Loc .

    $default  reduce using rule 50 (Factor)


State 86

   37 For_Statement: FOR ID . EQUAL Expr COMMA Expr COMMA INT_VAL END_LINE Block

    EQUAL  shift, and go to state 118


State 87

   36 While_Statement: WHILE Expr . END_LINE Block
   43 Expr: Expr . Binop Term

    END_LINE       shift, and go to state 119
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 88

   40 Return_Statement: RETURN END_LINE .

    $default  reduce using rule 40 (Return_Statement)


State 89

   39 Return_Statement: RETURN Expr . END_LINE
   43 Expr: Expr . Binop Term

    END_LINE       shift, and go to state 120
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 90

   22 Block: BEG END_LINE Content END END_LINE .

    $default  reduce using rule 22 (Block)


State 91

   41 Break_Statement: BREAK END_LINE .

    $default  reduce using rule 41 (Break_Statement)


State 92

   42 Continue_Statement: CONTINUE END_LINE .

    $default  reduce using rule 42 (Continue_Statement)


State 93

   77 FuncCall: ID OPEN_PAR . ArgList CLOSE_PAR

    OPEN_PAR    shift, and go to state 72
    TRUE        shift, and go to state 73
    FALSE       shift, and go to state 74
    ID          shift, and go to state 56
    INT_VAL     shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 121
    NOT         shift, and go to state 77

    $default  reduce using rule 80 (ArgList)

    Expr         go to state 122
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    ArgList      go to state 123
    Arg          go to state 124
    Loc          go to state 85


State 94

   84 Loc: ID OPEN_BOX . Expr CLOSE_BOX

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 125
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 95

   85 Print_Statement: PRINT OPEN_PAR . ArgList CLOSE_PAR

    OPEN_PAR    shift, and go to state 72
    TRUE        shift, and go to state 73
    FALSE       shift, and go to state 74
    ID          shift, and go to state 56
    INT_VAL     shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 121
    NOT         shift, and go to state 77

    $default  reduce using rule 80 (ArgList)

    Expr         go to state 122
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    ArgList      go to state 126
    Arg          go to state 124
    Loc          go to state 85


State 96

   86 Scan_Statement: SCAN OPEN_PAR . ArgList CLOSE_PAR

    OPEN_PAR    shift, and go to state 72
    TRUE        shift, and go to state 73
    FALSE       shift, and go to state 74
    ID          shift, and go to state 56
    INT_VAL     shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 121
    NOT         shift, and go to state 77

    $default  reduce using rule 80 (ArgList)

    Expr         go to state 122
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    ArgList      go to state 127
    Arg          go to state 124
    Loc          go to state 85


State 97

   24 Statement: FuncCall END_LINE .

    $default  reduce using rule 24 (Statement)


State 98

   38 Assign_Statement: Loc EQUAL . Expr END_LINE

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 128
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 99

   33 Statement: Print_Statement END_LINE .

    $default  reduce using rule 33 (Statement)


State 100

   32 Statement: Scan_Statement END_LINE .

    $default  reduce using rule 32 (Statement)


State 101

   43 Expr: Expr . Binop Term
   52 Factor: OPEN_PAR Expr . CLOSE_PAR

    CLOSE_PAR      shift, and go to state 129
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 102

   43 Expr: Expr . Binop Term
   44     | NOT Expr .

    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    $default  reduce using rule 44 (Expr)

    Binop  go to state 115


State 103

   34 If_Statement: IF Expr THEN . END_LINE Block
   35             | IF Expr THEN . END_LINE Block ELSE END_LINE Block

    END_LINE  shift, and go to state 130


State 104

   68 Binop: AND .

    $default  reduce using rule 68 (Binop)


State 105

   69 Binop: OR .

    $default  reduce using rule 69 (Binop)


State 106

   72 Binop: NOTEQUALTO .

    $default  reduce using rule 72 (Binop)


State 107

   71 Binop: EQUALTO .

    $default  reduce using rule 71 (Binop)


State 108

   75 Binop: LESS .

    $default  reduce using rule 75 (Binop)


State 109

   73 Binop: GREATER .

    $default  reduce using rule 73 (Binop)


State 110

   76 Binop: LESS_EQUAL .

    $default  reduce using rule 76 (Binop)


State 111

   74 Binop: GREATER_EQUAL .

    $default  reduce using rule 74 (Binop)


State 112

   66 Binop: PLUS .

    $default  reduce using rule 66 (Binop)


State 113

   67 Binop: MINUS .

    $default  reduce using rule 67 (Binop)


State 114

   70 Binop: MOD .

    $default  reduce using rule 70 (Binop)


State 115

   43 Expr: Expr Binop . Term

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76

    Term         go to state 131
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 116

   46 Term: Term MULTIPLY . Factor

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76

    Factor       go to state 132
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 117

   47 Term: Term DIVIDE . Factor

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76

    Factor       go to state 133
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 118

   37 For_Statement: FOR ID EQUAL . Expr COMMA Expr COMMA INT_VAL END_LINE Block

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 134
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 119

   36 While_Statement: WHILE Expr END_LINE . Block

    BEG  shift, and go to state 40

    Block  go to state 135


State 120

   39 Return_Statement: RETURN Expr END_LINE .

    $default  reduce using rule 39 (Return_Statement)


State 121

   81 Arg: STRING_VAL .

    $default  reduce using rule 81 (Arg)


State 122

   43 Expr: Expr . Binop Term
   82 Arg: Expr .

    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    $default  reduce using rule 82 (Arg)

    Binop  go to state 115


State 123

   77 FuncCall: ID OPEN_PAR ArgList . CLOSE_PAR
   79 ArgList: ArgList . COMMA Arg

    CLOSE_PAR  shift, and go to state 136
    COMMA      shift, and go to state 137


State 124

   78 ArgList: Arg .

    $default  reduce using rule 78 (ArgList)


State 125

   43 Expr: Expr . Binop Term
   84 Loc: ID OPEN_BOX Expr . CLOSE_BOX

    CLOSE_BOX      shift, and go to state 138
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 126

   79 ArgList: ArgList . COMMA Arg
   85 Print_Statement: PRINT OPEN_PAR ArgList . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 139
    COMMA      shift, and go to state 137


State 127

   79 ArgList: ArgList . COMMA Arg
   86 Scan_Statement: SCAN OPEN_PAR ArgList . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 140
    COMMA      shift, and go to state 137


State 128

   38 Assign_Statement: Loc EQUAL Expr . END_LINE
   43 Expr: Expr . Binop Term

    END_LINE       shift, and go to state 141
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 129

   52 Factor: OPEN_PAR Expr CLOSE_PAR .

    $default  reduce using rule 52 (Factor)


State 130

   34 If_Statement: IF Expr THEN END_LINE . Block
   35             | IF Expr THEN END_LINE . Block ELSE END_LINE Block

    BEG  shift, and go to state 40

    Block  go to state 142


State 131

   43 Expr: Expr Binop Term .
   46 Term: Term . MULTIPLY Factor
   47     | Term . DIVIDE Factor

    MULTIPLY  shift, and go to state 116
    DIVIDE    shift, and go to state 117

    $default  reduce using rule 43 (Expr)


State 132

   46 Term: Term MULTIPLY Factor .

    $default  reduce using rule 46 (Term)


State 133

   47 Term: Term DIVIDE Factor .

    $default  reduce using rule 47 (Term)


State 134

   37 For_Statement: FOR ID EQUAL Expr . COMMA Expr COMMA INT_VAL END_LINE Block
   43 Expr: Expr . Binop Term

    COMMA          shift, and go to state 143
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 135

   36 While_Statement: WHILE Expr END_LINE Block .

    $default  reduce using rule 36 (While_Statement)


State 136

   77 FuncCall: ID OPEN_PAR ArgList CLOSE_PAR .

    $default  reduce using rule 77 (FuncCall)


State 137

   79 ArgList: ArgList COMMA . Arg

    OPEN_PAR    shift, and go to state 72
    TRUE        shift, and go to state 73
    FALSE       shift, and go to state 74
    ID          shift, and go to state 56
    INT_VAL     shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 121
    NOT         shift, and go to state 77

    Expr         go to state 122
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Arg          go to state 144
    Loc          go to state 85


State 138

   84 Loc: ID OPEN_BOX Expr CLOSE_BOX .

    $default  reduce using rule 84 (Loc)


State 139

   85 Print_Statement: PRINT OPEN_PAR ArgList CLOSE_PAR .

    $default  reduce using rule 85 (Print_Statement)


State 140

   86 Scan_Statement: SCAN OPEN_PAR ArgList CLOSE_PAR .

    $default  reduce using rule 86 (Scan_Statement)


State 141

   38 Assign_Statement: Loc EQUAL Expr END_LINE .

    $default  reduce using rule 38 (Assign_Statement)


State 142

   34 If_Statement: IF Expr THEN END_LINE Block .
   35             | IF Expr THEN END_LINE Block . ELSE END_LINE Block

    ELSE  shift, and go to state 145

    $default  reduce using rule 34 (If_Statement)


State 143

   37 For_Statement: FOR ID EQUAL Expr COMMA . Expr COMMA INT_VAL END_LINE Block

    OPEN_PAR  shift, and go to state 72
    TRUE      shift, and go to state 73
    FALSE     shift, and go to state 74
    ID        shift, and go to state 56
    INT_VAL   shift, and go to state 75
    CHAR_VAL  shift, and go to state 76
    NOT       shift, and go to state 77

    Expr         go to state 146
    Term         go to state 79
    Factor       go to state 80
    Literal      go to state 81
    Int_Literal  go to state 82
    Lit_Literal  go to state 83
    FuncCall     go to state 84
    Loc          go to state 85


State 144

   79 ArgList: ArgList COMMA Arg .

    $default  reduce using rule 79 (ArgList)


State 145

   35 If_Statement: IF Expr THEN END_LINE Block ELSE . END_LINE Block

    END_LINE  shift, and go to state 147


State 146

   37 For_Statement: FOR ID EQUAL Expr COMMA Expr . COMMA INT_VAL END_LINE Block
   43 Expr: Expr . Binop Term

    COMMA          shift, and go to state 148
    AND            shift, and go to state 104
    OR             shift, and go to state 105
    NOTEQUALTO     shift, and go to state 106
    EQUALTO        shift, and go to state 107
    LESS           shift, and go to state 108
    GREATER        shift, and go to state 109
    LESS_EQUAL     shift, and go to state 110
    GREATER_EQUAL  shift, and go to state 111
    PLUS           shift, and go to state 112
    MINUS          shift, and go to state 113
    MOD            shift, and go to state 114

    Binop  go to state 115


State 147

   35 If_Statement: IF Expr THEN END_LINE Block ELSE END_LINE . Block

    BEG  shift, and go to state 40

    Block  go to state 149


State 148

   37 For_Statement: FOR ID EQUAL Expr COMMA Expr COMMA . INT_VAL END_LINE Block

    INT_VAL  shift, and go to state 150


State 149

   35 If_Statement: IF Expr THEN END_LINE Block ELSE END_LINE Block .

    $default  reduce using rule 35 (If_Statement)


State 150

   37 For_Statement: FOR ID EQUAL Expr COMMA Expr COMMA INT_VAL . END_LINE Block

    END_LINE  shift, and go to state 151


State 151

   37 For_Statement: FOR ID EQUAL Expr COMMA Expr COMMA INT_VAL END_LINE . Block

    BEG  shift, and go to state 40

    Block  go to state 152


State 152

   37 For_Statement: FOR ID EQUAL Expr COMMA Expr COMMA INT_VAL END_LINE Block .

    $default  reduce using rule 37 (For_Statement)
